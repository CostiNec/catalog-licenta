/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

var barChart = document.getElementById('barChart').getContext('2d');
var lineChart = document.getElementById('lineChart').getContext('2d');
var pieChart = document.getElementById('pieChart').getContext('2d');

if (barChart) {
    var dataChartObj = {
        datasets: [{
            label: 'Note',
            data: values,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    };

    var barChartObj = new Chart(barChart, {
        type: 'bar',
        data: dataChartObj,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}

if (lineChart) {
    var lineChartObj = new Chart(lineChart, {
        type: 'line',
        data: {
            datasets: [{
                label: 'Note',
                data: values,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}

if (pieChart) {
    var pieChartObj = new Chart(pieChart, {
        type: 'pie',
        data: {
            labels: ["Promovat", "Nepromovat"],
            datasets: [{
                data: [promoted.promoted, promoted.unPromoted],
                backgroundColor: [
                    "#4ACAB4",
                    "#FF8153",
                ]
            }]
        }
    });
}


let coursesChart = $('#coursesChart');

if (coursesChart.length) {
    coursesChart.on('select2:select', changeChart);

    coursesChart.on('select2:unselect', changeChart);

    function changeChart() {
        let courseIds = coursesChart.val();

        $.ajax({
            method: "GET",
            url: "/getStatistics",
            data: { courseIds: courseIds }
        })
            .done(function( response ) {
                let data = JSON.parse(response);
                barChartObj.data.datasets[0].data = data.values;
                barChartObj.update();

                lineChartObj.data.datasets[0].data = data.values;
                lineChartObj.update();

                pieChartObj.data.datasets[0].data = [data.promoted.promoted, data.promoted.unPromoted];
                pieChartObj.update();
            });
    }
}


/***/ },
/* 1 */
/***/ function(module, exports) {

window.addEventListener('DOMContentLoaded', event => {

    // Toggle the side navigation
    const sidebarToggle = document.body.querySelector('#sidebarToggle');
    if (sidebarToggle) {
        // Uncomment Below to persist sidebar toggle between refreshes
        // if (localStorage.getItem('sb|sidebar-toggle') === 'true') {
        //     document.body.classList.toggle('sb-sidenav-toggled');
        // }
        sidebarToggle.addEventListener('click', event => {
            event.preventDefault();
            document.body.classList.toggle('sb-sidenav-toggled');
            localStorage.setItem('sb|sidebar-toggle', document.body.classList.contains('sb-sidenav-toggled'));
        });
    }
});

let datePickers = $('.datepicker');

if (datePickers) {
    datePickers.datepicker({ dateFormat: 'Y-mm-dd' });
}

$(document).ready(function() {
    let jsMultiple = $('.js-example-basic-multiple');
    if (jsMultiple.length) {
        jsMultiple.select2();
    }

    let jsMultipleSeries = $('.js-example-basic-multiple-series');
    if (jsMultipleSeries.length) {
        jsMultipleSeries.select2();
    }

    let jsMultipleGroup = $('.js-example-basic-multiple-group');
    if (jsMultipleGroup.length) {
        jsMultipleGroup.select2();
    }

    let jsSimple = $('.js-example-basic-single');
    if (jsSimple.length) {
        jsSimple.select2();
    }
});

$(document).ready(function () {
    $('#dtBasicExample').DataTable();
    $('.dataTables_length').addClass('bs-select');
});


/***/ },
/* 2 */,
/* 3 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(1);
__webpack_require__(0);



/***/ }
/******/ ]);